{
	"info": {
		"_postman_id": "7a25e8a6-405f-45c7-9626-865f94838c17",
		"name": "Capstone Final Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "Create movies for test",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wat\",\r\n    \"excerpt\": \"Abou\",\r\n    \"release_date\": \"2020-10-08\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd437fcc-5232-41fe-be11-d2b81c9f3ade",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"new_movie_id\", jsonData.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wat\",\r\n    \"excerpt\": \"Abou\",\r\n    \"release_date\": \"2020-10-08\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d088ad74-feef-46eb-a3f8-1197efbc7024",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"new_actor_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ron\",\n    \"age\": 29,\n    \"gender\": \"Male\",\n    \"city\": \"Boston\",\n    \"state\": \"MA\",\n    \"phone\": \"123456\",\n    \"email\": \"rkhudoyber@gm.com\",\n    \"website\": \"wwwwww\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/moviecasts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7d079e2-db7b-4b62-a4ba-bf9dc312dd5a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"actor_id\": {{new_actor_id}},\n\t\"movie_id\": {{new_movie_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/moviecasts",
							"host": [
								"{{host}}"
							],
							"path": [
								"moviecasts"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a97bcbac-bb93-4c74-9d4a-d4f942cf4c07",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains actors array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c3e83e6-fbfe-4889-b2a1-20f0424445b5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains actor array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actor).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{new_actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{new_actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d49ef14-e4f3-492d-bd9e-1bc17ccee771",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains movies array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "181aa1fe-b152-4745-ba3d-a41edd0ffb11",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains movie array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movie).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/{{new_movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{new_movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/moviecasts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0843eb54-b857-452d-9c3e-6d959e158284",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains moviecasts array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.moviecasts).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/moviecasts",
							"host": [
								"{{host}}"
							],
							"path": [
								"moviecasts"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4309968d-113e-46ad-9334-4211b97e68d2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ron\",\n    \"age\": 29,\n    \"gender\": \"Male\",\n    \"city\": \"Boston\",\n    \"state\": \"MA\",\n    \"phone\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/{{new_actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{new_actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8826b51-6726-4d38-9e89-8c9e4ca871dd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{new_actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{new_actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "363d9d54-c34f-4db3-b04d-a0d9756d51b6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wataaa\",\r\n    \"release_date\": \"2020-10-08\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/{{new_movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{new_movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "608fb64c-fd72-43c2-944e-10dc164a11bd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/{{new_movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{new_movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cc4095c-540e-4f83-8722-62985e2ad58b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"new_movie_id\", jsonData.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wat\",\r\n    \"excerpt\": \"Abou\",\r\n    \"release_date\": \"2020-10-08\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{producertoken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6d652acd-b346-4b34-93ec-d610ef7a09b2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ab93e339-f8ac-4e62-9c3c-831fa75540cd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58265bfa-f497-4efd-ae3f-c658ea20245e",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wat\",\r\n    \"excerpt\": \"Abou\",\r\n    \"release_date\": \"2020-10-08\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36d20fda-91b5-401a-9bf5-9bc44e057675",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wataaa\",\r\n    \"release_date\": \"2020-10-08\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/{{new_movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{new_movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56d9bdc8-61a2-4451-bf26-10330a2ea3bb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"new_actor_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ron\",\n    \"age\": 29,\n    \"gender\": \"Male\",\n    \"city\": \"Boston\",\n    \"state\": \"MA\",\n    \"phone\": \"123456\",\n    \"email\": \"rkhudoyber@gm.com\",\n    \"website\": \"wwwwww\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b98ac26-c3ee-4b61-b607-a59e44e8cd4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ron\",\n    \"age\": 29,\n    \"gender\": \"Male\",\n    \"city\": \"Boston\",\n    \"state\": \"MA\",\n    \"phone\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/{{new_actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{new_actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/moviecasts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14340ea2-4e28-41e7-b0cf-a007f728a67d",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"actor_id\": {{new_actor_id}},\n\t\"movie_id\": {{new_movie_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/moviecasts",
							"host": [
								"{{host}}"
							],
							"path": [
								"moviecasts"
							]
						}
					},
					"response": []
				},
				{
					"name": "/moviecasts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bd2ea75-beaf-4157-a112-d649c16fb6f9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains moviecasts array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.moviecasts).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/moviecasts",
							"host": [
								"{{host}}"
							],
							"path": [
								"moviecasts"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e150a53f-fb0c-4ba6-87e9-ffc58eb53d2a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains actors array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66501545-50ce-47cf-9a69-6cd1c7f74978",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains actor array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actor).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{new_actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{new_actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56cfd482-d628-4611-9749-c50c510243f1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains movies array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "158325ae-6b5c-4c22-bab8-8d2341abd5ef",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains movie array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movie).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/{{new_movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{new_movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0218934c-e4ca-427c-9bd4-8240ce05877b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{new_actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{new_actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "408b1b2a-c3e9-4997-975f-7edc20a43620",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/{{new_movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{new_movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create actors for test",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79f649f3-f1a2-4a8d-b856-49e4883888a1",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"new_actor_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ron\",\n    \"age\": 29,\n    \"gender\": \"Male\",\n    \"city\": \"Boston\",\n    \"state\": \"MA\",\n    \"phone\": \"123456\",\n    \"email\": \"rkhudoyber@gm.com\",\n    \"website\": \"wwwwww\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{directortoken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "63862d67-0e4d-49c5-8475-aa2b13ca724c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "329fccbe-5fe1-49c3-a3ca-a21549ca05b3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df51457c-f1ae-4a69-9ed4-44414b03a46d",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wat\",\r\n    \"excerpt\": \"Abou\",\r\n    \"release_date\": \"2020-10-08\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ff5f6b4-da13-4d7c-a1be-1e8ac30e2a99",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains actors array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "985c4c95-cab3-4f4d-a0de-fdd37c90a54a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains actor array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actor).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{new_actor_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{new_actor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "591b7b93-b2b4-4de1-a624-0e928b9c6580",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains movies array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ebc6f9a-7798-4645-af18-1c99dc7b2acc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains movie array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movie).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/{{new_movie_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{new_movie_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/moviecasts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c7a0613-3e32-4ea8-8cbb-b1dad56fc5cb",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/moviecasts",
							"host": [
								"{{host}}"
							],
							"path": [
								"moviecasts"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b20357b7-108c-443e-98a1-784eda7c5aae",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ron\",\n    \"age\": 29,\n    \"gender\": \"Male\",\n    \"city\": \"Boston\",\n    \"state\": \"MA\",\n    \"phone\": \"123456\",\n    \"email\": \"rkhudoyber@gm.com\",\n    \"website\": \"wwwwww\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5bdb6c5-fa6f-4c15-a946-392ae58526a2",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ron\",\n    \"age\": 29,\n    \"gender\": \"Male\",\n    \"city\": \"Boston\",\n    \"state\": \"MA\",\n    \"phone\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f2a7b55-ba59-4b84-b2d0-9569a244fa08",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19785539-3a7b-4303-ac73-3a003fdc99c1",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Wataaa\",\r\n    \"release_date\": \"2020-10-08\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "727a7346-6014-4653-8b27-2d2c84e6e7a1",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/moviecasts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d46c416-464a-46c0-885f-43be8808a623",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"actor_id\": 4,\n\t\"movie_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/moviecasts",
							"host": [
								"{{host}}"
							],
							"path": [
								"moviecasts"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{assistanttoken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "94b0f2cd-4062-469d-bb51-2a3c0d50727e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f78597b1-67d9-4404-814c-9773ed5586da",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "75f2085a-aa2b-4029-884d-198e6afe658c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b82f378e-633f-44bd-8f5f-1db0c3149809",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e40c77d9-f6ab-4506-be60-b0a087279048",
			"key": "assistanttoken",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkcxY0oySW1yY1RmejJKWmY0QlFJTyJ9.eyJpc3MiOiJodHRwczovL3Jvbi1mbnNkLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZWFmMGE5NDZiNjliYzBjMTJmMDdkNWEiLCJhdWQiOiJtb3ZpZSIsImlhdCI6MTU4OTEzMDQ0NSwiZXhwIjoxNTg5MjE2ODQ1LCJhenAiOiJQVDl4UnRsN1RmYUtYMDlQRG0ycUpTRllvVmxYRERYSCIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiXX0.KtIRSXoAQmJqyjWb5fWfNFHzVL27ZUnmpDNHyLIXFt_ynYo8oPDXrxX1x1bALYMJjdlk8bpMC2LP9-WWjuZn-mtUn4gyveUqlYcto1RAwH4yX58Ubrg_xZGHN1KDXGuqlx5c5C9223v4JGSy_dY14rvRiUUNkMGIv1a61YnB0Ab5T9AmdqtipDdEeBSCz3sdI8TDQV2kW5k8hg0dh1yGgsyfjl_pudh_UIIjt-6aOsj6EvtRzTX0vat-_FckR01KCdgwYwCS5EZKqC52kPurFZRusFlYW0gR7PmWcsSSJJR7V8YP7VzYITqwMhrWhT62Ekl-nI52jQ_oo3PYPG3_Yw",
			"type": "string"
		},
		{
			"id": "c5859b02-0aa6-4e62-98d0-a93120384b43",
			"key": "directortoken",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkcxY0oySW1yY1RmejJKWmY0QlFJTyJ9.eyJpc3MiOiJodHRwczovL3Jvbi1mbnNkLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZWFmMGFkZTU0YjE0YzBjMTI3MjQyMDUiLCJhdWQiOiJtb3ZpZSIsImlhdCI6MTU4OTEzMDM3NywiZXhwIjoxNTg5MjE2Nzc3LCJhenAiOiJQVDl4UnRsN1RmYUtYMDlQRG0ycUpTRllvVmxYRERYSCIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVjYXN0cyIsImdldDptb3ZpZXMiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyJdfQ.VacDS8DDAsjvwx448axJJPWUrkhp0W8ds105omrGPig5hZWriz4VOViG1b-XUznKqXmp5lrN-QfYYetV4uqhEHQWiOXmCU4qxqhIWaxo2JXMtR_1AJygvgxr9kvKrTAG1_94H0HNaQUmhsrQcTDgrInxKkCUQ1D3i3a5AxBNYU-njC07Uk4WakrYOiCEx3fBUH8pmxzt2UMkgTDxfdgAk57OCnclCDSDa3lNyKl7G0eoMbSZqpAHapIY2bjkoakvhqzhMZtcpGSGcf5Sf9You7uedaq7MNfvIcxXMZQgH0U-SK6A4BL1FbNuky9MDQnFHEqc_glkqSu7ZzumAXwkgA",
			"type": "string"
		},
		{
			"id": "e7b75817-8a98-4be4-b641-9fe603bf1003",
			"key": "producertoken",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkcxY0oySW1yY1RmejJKWmY0QlFJTyJ9.eyJpc3MiOiJodHRwczovL3Jvbi1mbnNkLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZWI2YmZhNjZiNjliYzBjMTIwNzMyNWYiLCJhdWQiOiJtb3ZpZSIsImlhdCI6MTU4OTEzMDIyOCwiZXhwIjoxNTg5MjE2NjI4LCJhenAiOiJQVDl4UnRsN1RmYUtYMDlQRG0ycUpTRllvVmxYRERYSCIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImRlbGV0ZTptb3ZpZXMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllY2FzdHMiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiLCJwb3N0Om1vdmllY2FzdHMiLCJwb3N0Om1vdmllcyJdfQ.bIxnaPnnRK2LOGXXp_yTqM9_qTisXPWdbSqq59QHexrpsM7AeLwlLI8Zq6hQ-kkxITHTW0grGvOwolu35DvSBI40SBfh3Hj0t4jPWJ8V6EAaX9NYUbDL0imj_xI2jJUl_mxCLEREqEgnjHjZNnKOtaBc4UmoUHWDL_NRaMQ7xCS30EU7J-iEAHbI_5ziu4TnW-9bhrG9AIn8U6BadYt-fNP0pz1BkpV0J-n4rjv2-gv49l4C_I5GMuVszJjpygfH-LwF_174hdo-Qe5zIX7Jfhj-LoIZGHs0Z2XYYXzU0pSS8TfPmEV5JqiOf27B2zYUPxmn066S6znw6rD7M56yTg",
			"type": "string"
		},
		{
			"id": "811385f6-bc35-4071-af87-30486afce733",
			"key": "host",
			"value": "https://movie-agency-api.herokuapp.com",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}